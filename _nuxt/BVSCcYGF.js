import{r as e,x as l,R as b,S as A,T as W,g as T,B as f,o as d,c as S,t as B,U as v}from"./DTKpU_k8.js";const M=()=>({sayExample:()=>console.log("HELLO FROM COMPOSABLES")}),{initData:y,initDataUnsafe:I,version:w,platform:x,isVersionAtLeast:m,sendData:D,close:E}=Telegram.WebApp,g=e(!1),C=(...t)=>{Telegram.WebApp.ready(...t),g.value=!0},c=t=>Telegram.WebApp.platform===t,u=c("unknown"),_={ClosingConfirmation:"6.2",CloudStorage:"6.9",RequestWriteAccess:"6.9",RequestContact:"6.9",SettingsButton:"7.0",BiometricManager:"7.2",DisableVerticalSwipes:"7.7"},P=t=>m(_[t]),V=!u&&Telegram.WebApp.initData==="";function p(){return{initData:y,initDataUnsafe:I,version:w,platform:x,isVersionAtLeast:m,onEvent:(t,a,n={manual:!1})=>{const{manual:r}=n,i=()=>{Telegram.WebApp.onEvent(t,a)},o=()=>{Telegram.WebApp.offEvent(t,a)};return r?i():(l(i),b(o)),{off:o}},sendData:D,ready:C,close:E,isReady:A(g),isPlatform:c,isPlatformUnknown:u,isFeatureSupported:P,canSendData:V}}e(Telegram.WebApp.BackButton.isVisible);Telegram.WebApp.BiometricManager;e(Telegram.WebApp.BiometricManager.isInited);e(Telegram.WebApp.BiometricManager.isBiometricAvailable);e(Telegram.WebApp.BiometricManager.biometricType);e(Telegram.WebApp.BiometricManager.isAccessRequested);e(Telegram.WebApp.BiometricManager.isAccessGranted);e(Telegram.WebApp.BiometricManager.isAccessGranted);e(Telegram.WebApp.BiometricManager.deviceId);Telegram.WebApp;e(Telegram.WebApp.isClosingConfirmationEnabled);const s=Telegram.WebApp.CloudStorage;function h(t,a){return new Promise((n,r)=>{s.setItem(t,a,(i,o)=>{i&&r(i),n(o)})})}function U(t){return new Promise((a,n)=>{s.getItem(t,(r,i)=>{r&&n(r),a(i)})})}function k(t){return new Promise((a,n)=>{s.getItems(t,(r,i)=>{r&&n(r),a(i)})})}function H(t){return new Promise((a,n)=>{s.removeItem(t,(r,i)=>{r&&n(r),a(i)})})}function O(t){return new Promise((a,n)=>{s.removeItems(t,(r,i)=>{r&&n(r),a(i)})})}function L(){return new Promise((t,a)=>{s.getKeys((n,r)=>{n&&a(n),t(r)})})}function R(){return{setStorageItem:h,getStorageItem:U,getStorageItems:k,removeStorageItem:H,removeStorageItems:O,getStorageKeys:L}}Telegram.WebApp.HapticFeedback;e(Telegram.WebApp.MainButton.text);e(Telegram.WebApp.MainButton.color);e(Telegram.WebApp.MainButton.textColor);e(Telegram.WebApp.MainButton.isVisible);e(Telegram.WebApp.MainButton.isActive);e(Telegram.WebApp.MainButton.isProgressVisible);Telegram.WebApp;Telegram.WebApp;Telegram.WebApp;Telegram.WebApp;p();e(Telegram.WebApp.SettingsButton.isVisible);e(Telegram.WebApp.colorScheme);e(Telegram.WebApp.themeParams);e(Telegram.WebApp.headerColor);e(Telegram.WebApp.backgroundColor);e(Telegram.WebApp.isExpanded);e(Telegram.WebApp.viewportHeight);e(Telegram.WebApp.viewportStableHeight);e(Telegram.WebApp.isVerticalSwipesEnabled);const N=W("tgWebApp",()=>{const t=e(null),a=e(null),n=e(null);return T(a,()=>{a&&(n.value=a.value.user.first_name)}),{webAppData:t,dataUnsafe:a,init:()=>{t.value=p(),window.Telegram.WebApp.CloudStorage.getItem("initData",(i,o)=>{typeof o=="string"&&o===""?(console.log("data is saved in storage!"),a.value=p().initDataUnsafe,R().setStorageItem("initData",JSON.stringify(a.value))):(console.log("data exist in storage"),a.value=JSON.parse(o))})},first_name:n}}),q={__name:"MyIndex",setup(t){const a=f(),{sayExample:n}=M();n();const r=N();return r.init(),l(()=>{a.$sayHello()}),(i,o)=>(d(),S("h1",null,"Hello Telegram mini app, my name is "+B(v(r).first_name),1))}},G=q;export{G as default};
